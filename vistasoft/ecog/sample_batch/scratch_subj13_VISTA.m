% scratch_subj13

%% VISTA
% Setup parameters
expt = 'VISTA';
subj = 'subj13';
basepath = ['/Users/kanile/biac3-wagner7/ecog/' subj '/ecog/' expt];

% Conditions
bef_win = 0.2; % results files will have the tag '1p7' in filename (1.5+0.2=1.7=1p7)
aft_win = 1.5;
condnames = {...
    'all','istudy','itest','astudy','atest',...
    'i01','i02','i03','a01','a02','a03',...
    'tihits','ticorj','tahits','tacorj'};

blocklist = {'KP1010-02','KP1010-03','KP1010-04','KP1010-05','KP1010-06',...
        'KP1010-07','KP1010-08','KP1010-09','KP1010-10','KP1010-11'};

% load a parfile
parfile = fullfile(basepath,'RawData',blocklist{1},['parSubj' subj(5:end) expt '.mat']); % generated by makeparSubj02miniKM.m
if exist(parfile,'file')
    load(parfile);
else % first time creating parfile
    cd(basepath);
    funcname = ['makeparSubj' subj(5:end) expt];
    cmd = ['par = ' funcname '(blocklist{1},basepath,parfile)'];
    eval(cmd);
end

% Update path info based on par.basepath
par.basepath = basepath;
par = ecogPathUpdate(par);

% Remove unwanted channels from electrode list
elecs = [1:par.nchan];
if isfield(par,'missingchan')
    elecs=elecs(~ismember(elecs,par.missingchan));
end
elecs=elecs(~ismember(elecs,par.badchan));
elecs=elecs(~ismember(elecs,par.refchan));

%% preprocess files
% flags:
% p: Create parfile, otherwise load existing parfile.
% f: Filter (ecogNoiseFiltData)
% a: Artifact replacement (ecogArtReplace)
% c: Common average reference (ecogCommonAvgRef)
% d: Calculate amplitude & phase (ecogDataDecompose)
% t: Set timestamps (ecogStampfunc)
% e: Make ERPs (ecogERP)
% z: Make ZERPs (ecogZERP) normalized ERPs
% s: Make ERSPs (ecogERSP)

% Probably want to run 'pt' first to generate the param file and do the
% timestamps for each block, then run 'fac' steps, then 'e' and 'z' to 
% create ERPs/ZERPs. Step 'd' takes many hours and must be run before 's'.
for b=1:length(blocklist)
    jc_ecogBatch_VISTA(subj(5:end),blocklist{b},'pt',basepath); 
end

% Make Average ERP and ERSP
% This is a simple average of the mean ERP/ZERP/ERSP from each channel in each block.
% The results appear in the directory Results/<subjID>avg , where subjID is
% the first 3 chars in the blocknames (blocklist{1}(1:3)).
for n = 1:length(condnames)
    ecogAvgERSP(par,elecs,blocklist,condnames{n},bef_win,aft_win);
    ecogAvgERP(par,elecs,blocklist,condnames{n},bef_win,aft_win);
    ecogAvgZERP(par,elecs,blocklist,condnames{n},bef_win,aft_win);
end

%% View results
ecogPlotERP_GUI(par,bef_win,aft_win,condnames);
ecogPlotZERP_GUI(par,bef_win,aft_win,condnames);
ecogPlotERSP_GUI(par,bef_win,aft_win,condnames,'ersp');


    






%%