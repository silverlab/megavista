% scratch_subj02

%% AIN
% Setup parameters
expt = 'AIN';
subj = 'subj02';
basepath = ['/Users/kanile/biac3-wagner7/ecog/' subj '/ecog/' expt];
bef_win = 0.2; % AIN 1p7
aft_win = 1.5;

condnames = {'t-ihits','t-icorj','t-ahits','t-acorj'};
condstoprocess = [1 2 5 6]; % these codes correspond to condnames in pdioevents

% blocklist = {'ST03_bl18','ST03_bl29','ST03_bl30','ST03_bl31','ST03_bl32',...
%     'ST03_bl65','ST03_bl66','ST03_bl69'};
blocklist = {'ST03_bl18','ST03_bl29','ST03_bl30','ST03_bl31','ST03_bl32'};
% load a parfile
parfile = fullfile(basepath,'RawData',blocklist{1},['parSubj' subj(5:end) expt '.mat']); % generated by makeparSubj02miniKM.m
load(parfile);

% Update path info based on par.basepath
par.basepath = basepath;
par = ecogPathUpdate(par);

% Remove unwanted channels from electrode list
elecs = [1:par.nchan];
if isfield(par,'missingchan')
    elecs=elecs(~ismember(elecs,par.missingchan));
end
elecs=elecs(~ismember(elecs,par.badchan));
elecs=elecs(~ismember(elecs,par.epichan));
elecs=elecs(~ismember(elecs,par.refchan));

%% preprocess files
% flags:
% p: Create parfile, otherwise load existing parfile.
% f: Filter (ecogNoiseFiltData)
% a: Artifact replacement (ecogArtReplace)
% c: Common average reference (ecogCommonAvgRef)
% d: Calculate amplitude & phase (ecogDataDecompose)
% t: Set timestamps (ecogStampfunc)
% e: Make ERPs (ecogERP)
% s: Make ERSPs (ecogERSP)
for b=1:length(blocklist)
    ecogBatch_AIN('02',blocklist{b},'p',basepath); 
end

%% Make Multblock ERPs and ERSPs
blocklist = {'ST03_bl18','ST03_bl29','ST03_bl30','ST03_bl31','ST03_bl32'};
clear eventtimes
clear combopar
for n = 1:length(blocklist)
    block = blocklist{n};
    parfile = fullfile(basepath,'RawData',blocklist{n},['parSubj' subj(5:end) expt '.mat']); % generated by makeparSubj02miniKM.m
    load(parfile);
    combopar{n} = par;
    stampspath = fullfile(par.BehavData,['pdioevents_' par.block '.mat']);
    load(stampspath);
    condstamps = [];
    for k = 1:length(condstoprocess);
        mycond = condstoprocess(k);
        eventtimes{n,k} = truestamps(find(conds==mycond));
    end
end
ecogERSPmultblocks(combopar,elecs,blocklist,eventtimes,bef_win,aft_win,condnames);
ecogERPmultblocks(combopar,elecs,blocklist,eventtimes,bef_win,aft_win,condnames);

%% Make phase-shuffle surrogate for multblock ERSPs
clear eventtimes
clear combopar
for n = 1:length(blocklist)
    block = blocklist{n};
    parfile = fullfile(basepath,'RawData',blocklist{n},['parSubj' subj(5:end) expt '.mat']); % generated by makeparSubj02miniKM.m
    load(parfile);
    combopar{n} = par;
    stampspath = fullfile(par.BehavData,['pdioevents_' par.block '.mat']);
    load(stampspath);
    condstamps = [];
    for k = 1:length(condstoprocess);
        mycond = condstoprocess(k);
        eventtimes{n,k} = truestamps(find(conds==mycond));
    end
end
ecogSurrogatePhaseShuffle(combopar,elecs,blocklist,eventtimes,bef_win,aft_win,condnames);
    
%% Make multblock normalized ERSPs
% mod some fields in par for multblock analysis
bprefix = blocklist{1}(1:3);
parfile = fullfile(basepath,'RawData',blocklist{1},['parSubj' subj(5:end) expt '.mat']); % generated by makeparSubj02miniKM.m
load(parfile);
multpar = par;
% Update path info based on par.basepath
par.basepath = basepath;
par = ecogPathUpdate(par);
multpar.Results = fullfile(fileparts(multpar.Results),[bprefix 'mult']);
for n = 1:length(condnames)
    ecogNormERSPmultblock(multpar,bef_win,aft_win,condnames{n},elecs);
end

return

%% View results
ecogPlotERP_GUI(par,bef_win,aft_win,condnames);
ecogPlotERSP_GUI(par,bef_win,aft_win,condnames,'norm');

% Trial counts
fprintf('#trials\t');
for n = 1:length(condnames)
    fprintf(['\t' condnames{n}]);
end
fprintf('\n');
for n = 1:length(blocklist)
    block = blocklist{n};
    fprintf(block);
    tlist = load(fullfile(basepath,'BehavData',['pdioevents_' block '.mat']),'conds');
    for c = condstoprocess
        tcount = length(find(tlist.conds==c));
        fprintf(['\t' num2str(tcount)]);
    end
    fprintf('\n');
end
    






%%