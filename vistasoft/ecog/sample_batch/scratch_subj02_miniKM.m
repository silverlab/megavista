% scratch_subj02

%% miniKM
% Setup parameters
expt = 'miniKM';
subj = 'subj02';
bef_win = 0.1; 
aft_win = 1.1;
condnames = {'base2','base3','base4','rep2','rep3','rep4','half2','half3','half4','new2','new3','new4'};
condstoprocess = [12 13 14 22 23 24 32 33 34 42 43 44]; % these codes correspond to condnames in pdioevents
condnames{end+1} = 'q2obj1';
q2obj1conds = [11 21 31 41]; % collapse across all quartet 2, first objs
blocklist = {'ST03_bl16','ST03_bl19','ST03_bl34','ST03_bl35','ST03_bl76'};

% load a parfile
basepath = ['/Users/kanile/biac2/ecog/subj' subj(5:end) '/ecog/miniKM'];
parfile = fullfile(basepath,'RawData',blocklist{1},['parSubj' subj(5:end) expt '.mat']); 
if exist(parfile,'file')
    load(parfile)
end
% Remove unwanted channels from electrode list
elecs = [1:par.nchan];
if isfield(par,'missingchan')
    elecs=elecs(~ismember(elecs,par.missingchan));
end
elecs=elecs(~ismember(elecs,par.badchan));
elecs=elecs(~ismember(elecs,par.epichan));
elecs=elecs(~ismember(elecs,par.refchan));

%% preprocess files
% flags:
% p: Create parfile, otherwise load existing parfile.
% f: Filter (ecogNoiseFiltData)
% a: Artifact replacement (ecogArtReplace)
% c: Common average reference (ecogCommonAvgRef)
% d: Calculate amplitude & phase (ecogDataDecompose)
% t: Set timestamps (ecogStampfunc)
% e: Make ERPs (ecogERP)
% s: Make ERSPs (ecogERSP)
for b=1:length(blocklist)
    ecogBatch_miniKM(subj(5:6),blocklist{b},'t'); 
end
for b=1:length(blocklist)
    ecogBatch_miniKM(subj(5:6),blocklist{b},'pfacdes'); 
end

%% Make Multblock ERSPs
clear eventtimes
clear combopar
for n = 1:length(blocklist)
    block = blocklist{n};
    parfile = fullfile(basepath,'RawData',blocklist{n},['parSubj' subj(5:end) expt '.mat']); % generated by makeparSubj02miniKM.m
    load(parfile);
    combopar{n} = par;
    stampspath = fullfile(par.BehavData,['pdioevents_' par.block '.mat']);
    load(stampspath);
    condstamps = [];
    for k = 1:length(condstoprocess);
        mycond = condstoprocess(k);
        eventtimes{n,k} = truestamps(conds==mycond);
    end
    temp = [];
    for q = 1:length(q2obj1conds)
        mycond = q2obj1conds(q);
        temp = [temp; truestamps(conds==mycond)];
    end
    eventtimes{n,k+1} = sort(temp);
end
ecogERSPmultblocks(combopar,elecs,blocklist,eventtimes,bef_win,aft_win,condnames);
ecogERPmultblocks(combopar,elecs,blocklist,eventtimes,bef_win,aft_win,condnames);

%% Make phase-shuffle surrogate for multblock ERSPs
surr_condnames = {'base','rep','half','new','q2obj1'};
surr_condstoprocess = [12 22 32 42];
clear surr_eventtimes
clear combopar
for n = 1:length(blocklist)
    block = blocklist{n};
    parfile = fullfile(basepath,'RawData',blocklist{n},['parSubj' subj(5:end) expt '.mat']); % generated by makeparSubj02miniKM.m
    load(parfile);
    combopar{n} = par;
    stampspath = fullfile(par.BehavData,['pdioevents_' par.block '.mat']);
    load(stampspath);
    for k = 1:length(condstoprocess);
        mycond = condstoprocess(k);
        surr_eventtimes{n,k} = truestamps(conds==mycond);
    end
    temp = [];
    for q = 1:length(q2obj1conds)
        mycond = q2obj1conds(q);
        temp = [temp; truestamps(conds==mycond)];
    end
    surr_eventtimes{n,k+1} = sort(temp);
end
ecogSurrogatePhaseShuffle(combopar,elecs,blocklist,surr_eventtimes,bef_win,aft_win,surr_condnames);
    
%% View results
% ecogPlotERP_GUI(par,bef_win,aft_win,condnames);
ecogPlotERSP_GUI(par,bef_win,aft_win,condnames,'ersp');

% Trial counts
fprintf('#trials\t');
for n = 1:length(condnames)
    fprintf(['\t' condnames{n}]);
end
fprintf('\n');
for n = 1:length(blocklist)
    block = blocklist{n};
    fprintf(block);
    tlist = load(fullfile(basepath,'BehavData',['pdioevents_' block '.mat']),'conds');
    for c = condstoprocess
        tcount = length(find(tlist.conds==c));
        fprintf(['\t' num2str(tcount)]);
    end
    fprintf('\n');
end
    






%%